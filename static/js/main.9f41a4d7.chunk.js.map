{"version":3,"sources":["Store.js","components/Sidebar/SidebarInner.js","components/Sidebar/Sidebar.js","components/listing/ListingItem.js","components/listing/Listing.js","components/Media/index.js","App.js","index.js"],"names":["API_URL","concat","loadMedia","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","args","queryString","wrap","_context","prev","next","esm_extends","keys","map","arg","join","axios","get","abrupt","sent","stop","_x","apply","this","arguments","SidebarInner","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getRating","ratings","entries","length","react_default","createElement","Fragment","icon","type","theme","Value","toggleSidebar","setState","prevState","isOpen","state","content","coverImage","backgroundImage","Episode","className","style","Year","Ratings","Title","Plot","renderSidebar","Component","root","document","getElementById","Sidebar","componentDidMount","addEventListener","handleClickOutside","appendChild","el","classList","add","visible","componentWillUnmount","removeEventListener","removeChild","remove","event","domNode","ReactDOM","findDOMNode","assertThisInitialized","contains","target","createPortal","SidebarInner_SidebarInner","ListingItem","Sidebar_Sidebar","loading","episode","getEpisodeMetaData","meta","onClick","getThumb","dist","lines","cardBg","undefined","backgroundPosition","backgroundRepeat","backgroundSize","_this2","seriesTitle","season","api","t","then","resp","data","catch","err","console","log","renderEpisodeMeta","Listing","episodes","media","dotPosition","bind","previous","carousel","React","createRef","title","Episodes","_this3","assign","ref","node","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","i","key","ListingItem_ListingItem","Media","search","Listing_Listing","defaultProps","App","Media_Media","render","App_App"],"mappings":"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","file":"static/js/main.9f41a4d7.chunk.js","sourcesContent":["import axios from 'axios';\n\n/**\n * Make a request to load all Posts.\n *\n * @returns {AxiosPromise<any>}\n */\n\nexport const API_KEY = '3968beae';\nexport const API_URL = `http://www.omdbapi.com?apikey=${API_KEY}`;\n\n/*\n * Makes a get request and builds the query string based on an object.\n *\n * @param {object} args\n * @returns {AxiosPromise<any>}\n */\n\nexport const loadMedia = async ( { ...args } ) => {\n  const queryString = Object.keys(args).map(arg => `${arg}=${args[arg]}`).join('&');\n  return await axios.get(`${API_URL}&${queryString}`);\n};\n","import React, { Component } from 'react'\n// import SidebarIcon from './SidebarIcon';\nimport { Icon } from \"antd\";\nexport default class SidebarInner extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n    }\n  }\n\n  getRating = (ratings) => {\n    if (Object.entries(ratings).length) {\n      return (\n        <>\n          <Icon type=\"star\" theme=\"filled\"></Icon> {ratings[0].Value}\n        </>\n      );\n    }\n    return null;\n  }\n\n  renderSidebar() {\n    const { content } = this.props;\n\n    const coverImage = {\n      backgroundImage: `url(/images/episode-${content.Episode}.jpeg)`\n    }\n\n    return (\n      <>\n        <div className=\"episode-cover\" style={coverImage}>\n        </div>\n        <div className=\"section\">\n          <div className=\"container sidebar-reviews\">\n            <span>{`Episode ${content.Episode}`} - {content.Year}</span>\n            <span>\n              {this.getRating(content.Ratings)}\n            </span>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"container sidebar-meta\">\n            <h3 className=\"title is-3\">{content.Title}</h3>\n            <p className=\"subtitle\">{ content.Plot }</p>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  toggleSidebar = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"sidebar-container\">\n        {/* <SidebarIcon isOpen={this.state.isOpen} onClick={this.toggleSidebar} /> */}\n        {this.renderSidebar()}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport SidebarInner from './SidebarInner';\n\nconst root = document.getElementById(\"sidebar\");\n\nexport default class Sidebar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visible: false\n    }\n    this.el = document.createElement(\"div\");\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('click', this.handleClickOutside, true);\n    root.appendChild(this.el);\n    root.classList.add('active');\n    this.setState({ visible: true });\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('click', this.handleClickOutside, true);\n    root.removeChild(this.el);\n    root.classList.remove('active');\n    this.setState({ visible: false });\n  };\n\n  handleClickOutside = event => {\n    const domNode = ReactDOM.findDOMNode(this);\n\n    if (!domNode || !domNode.contains(event.target)) {\n      this.setState({\n        visible: false\n      });\n      root.classList.remove('active');\n    }\n  }\n\n  render() {\n    if (this.state.visible) {\n      return ReactDOM.createPortal(\n        <SidebarInner {...this.props}></SidebarInner>,\n        this.el\n      );\n    }\n    return null;\n  }\n}","import * as api from './../../Store';\nimport React, { Component } from 'react';\nimport Truncate from '@konforti/react-truncate';\nimport Sidebar from '../Sidebar/Sidebar';\n\nexport default class ListingItem extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isOpen: false,\n    };\n\n  }\n\n  componentDidMount() {\n    if (this.props.episode) {\n      this.getEpisodeMetaData(this.props.episode);\n    }\n  }\n\n  toggleSidebar = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }));\n\n    if (this.state.isOpen) {\n      return (\n        <Sidebar></Sidebar>\n      )\n    }\n  }\n  /**\n   * We need to get some additional episode meta data.\n   * @param {*} episode\n   */\n  renderEpisodeMeta() {\n    if (!this.state.loading) {\n      const { meta } = this.state;\n      const { Title } = this.props.episode;\n\n      return (\n        <div className=\"card\" onClick={this.toggleSidebar}>\n          <div className=\"card-image\">\n            <span className=\"card__episode-number\">{ meta.Episode }</span>\n            {this.getThumb(meta.Episode)}\n          </div>\n          <div className=\"card-content\">\n            <h5 className=\"title is-6\">{ Title }</h5>\n            <div className=\"subtitle is-6\">\n              <Truncate lines={3}>{meta.Plot}</Truncate>\n            </div>\n          </div>\n\n          { this.state.isOpen ? <Sidebar content={meta}></Sidebar> : null }\n        </div>\n      )\n    }\n  }\n\n  getThumb(episode, cardBg = {}) {\n\n    if (episode) {\n      cardBg = {\n        backgroundImage: `url(/images/episode-${episode}.jpeg)`,\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n      }\n    }\n\n    return (\n      <figure className=\"image\" style={cardBg}></figure>\n    );\n  }\n\n  getEpisodeMetaData({ seriesTitle, season, Episode }) {\n\n    const args = {\n      t: seriesTitle,\n      season: season,\n      episode: Episode\n    }\n\n    api.loadMedia(args).then((resp) => {\n      this.setState({ meta: resp.data, loading: false}, () => {});\n    }).catch((err) => {\n      console.log(err);\n      return null;\n    });\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderEpisodeMeta()}\n      </>\n    )\n  }\n}","import * as api from './../../Store';\n\nimport React, { Component } from 'react';\nimport { Carousel, Icon } from \"antd\";\nimport ListingItem from './ListingItem';\nimport \"antd/lib/carousel/style/index.css\";\nexport default class Listing extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      episodes: null,\n      media: null,\n      loading: true,\n      dotPosition: 'top',\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.carousel = React.createRef();\n  }\n\n  next() {\n    this.carousel.next();\n  }\n  previous() {\n    this.carousel.prev();\n  }\n\n  componentDidMount() {\n    const args = {\n      t: this.props.title,\n      season: this.props.season,\n    };\n\n    api.loadMedia(args).then((resp) => {\n      this.setState({ episodes: resp.data.Episodes, loading: false}, () => {});\n    }).catch((err) => {\n      console.log(err);\n      return null;\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <div>Loading episodes...</div>;\n    }\n\n    const { episodes } = this.state;\n    const config = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 4,\n      slidesToScroll: 1,\n      initialSlide: 0,\n      responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            infinite: true,\n            dots: true\n          }\n        },\n        {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n            initialSlide: 2\n          }\n        },\n        {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 1,\n            dots: true,\n            slidesToScroll: 1\n          }\n        }]\n\n    };\n    return (\n      <>\n        <div className=\"columns\">\n          <Carousel ref={node => (this.carousel = node)} {...config} dotPosition={this.state.dotPosition}>\n            {episodes.map((episode, i) => {\n              episode.season = this.props.season;\n              episode.seriesTitle = this.props.title;\n              return (\n                <div key={i} className=\"column is-one-quarter\">\n                  <ListingItem episode={episode}></ListingItem>\n                </div>\n              )\n            })}\n          </Carousel>\n        </div>\n\n        <div className=\"icon-holder\">\n          <Icon type=\"arrow-left\" onClick={this.previous} />\n          <Icon type=\"arrow-right\" onClick={this.next} />\n        </div>\n      </>\n    )\n  }\n}","import React, { Component } from 'react';\nimport * as api from './../../Store';\n\nimport Listing from './../listing/Listing';\n\nexport default class Media extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      media: {},\n    };\n  }\n\n  componentDidMount() {\n\n    if (this.props.search) {\n      const args = {\n        t: this.props.search,\n      };\n\n      api.loadMedia(args).then((resp) => {\n        this.setState({media: resp.data});\n      });\n    }\n  }\n\n\n  render() {\n    return (\n      <section className=\"media\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <p className=\"subtitle is-5\">{ `Season ${this.props.season}` }</p>\n            <h1 className=\"title is-1\">{ this.state.media.Title }</h1>\n            <p className=\"subtitle is-4\">{this.state.media.Plot}</p>\n          </div>\n        </div>\n\n        {Object.entries(this.state.media).length > 0 &&\n          <Listing title={ this.state.media.Title } season={ this.props.season }></Listing>\n        }\n\n      </section>\n    )\n  }\n}\n\n\nMedia.defaultProps = {\n  search: '',\n}","import React, { Component } from 'react';\n\nimport Media from './components/Media/index';\nimport './styling/index.scss';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"app-bg\"></div>\n        <div className=\"container vcentered\">\n          {/* For now We are hardcoding the name, but this could just as well be done with an input[search]? */}\n          <Media search=\"insecure\" season='1'></Media>\n        </div>\n      </div>\n    );\n  }\n};","import React from 'react';\nimport { render } from 'react-dom';\n\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}